{
  "src/lib/components/DateTimePicker.js": {
    "description": "DateTimePicker is a datetime input component.\nThe inputs can be initialized with the `defaultValue` property and the\ninput date, on ISO format, is specified with the `value` property.",
    "displayName": "DateTimePicker",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The input's value. Accepts values on the ISO format.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the value changes."
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The date input placeholder.",
        "defaultValue": {
          "value": "'dd/MM/yyyy hh:mm'",
          "computed": false
        }
      },
      "timezonePlaceholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The timezone input placeholder.",
        "defaultValue": {
          "value": "'Select timezone...'",
          "computed": false
        }
      },
      "renderTimezone": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Defines if the timezone input should be rendered. Defaults to true.",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "object"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The container's style."
      },
      "dateInputStyle": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "object"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The date input's style."
      },
      "timezoneInputStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The timezone input's container style."
      },
      "locale": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "\"pt\"",
              "computed": false
            },
            {
              "value": "'pt-BR'",
              "computed": false
            },
            {
              "value": "'en-US'",
              "computed": false
            },
            {
              "value": "\"en-IN\"",
              "computed": false
            },
            {
              "value": "\"es\"",
              "computed": false
            },
            {
              "value": "\"it\"",
              "computed": false
            },
            {
              "value": "\"de\"",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "'en-US'",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/GrammarRelationship.react.js": {
    "description": "",
    "displayName": "GrammarRelationship",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "data": {
        "type": {
          "name": "objectOf",
          "value": {
            "name": "shape",
            "value": {
              "text": {
                "name": "string",
                "required": false
              },
              "pos": {
                "name": "string",
                "required": false
              },
              "head": {
                "name": "shape",
                "value": {
                  "ind": {
                    "name": "string",
                    "required": false
                  },
                  "relationship": {
                    "name": "string",
                    "required": false
                  },
                  "relationshipTag": {
                    "name": "string",
                    "required": false
                  }
                },
                "required": false
              },
              "posTag": {
                "name": "string",
                "required": false
              },
              "children": {
                "name": "any",
                "required": false
              }
            }
          }
        },
        "required": false,
        "description": "The data to be displayed",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n}",
          "computed": false
        }
      },
      "selectedText": {
        "type": {
          "name": "shape",
          "value": {
            "text": {
              "name": "string",
              "required": false
            },
            "id": {
              "name": "string",
              "required": false
            }
          }
        },
        "required": false,
        "description": ""
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/KeyedFileBrowser.js": {
    "description": "KeyedFileBrowser is a component that renders a file browser based on a entry JSON.\nThe files and folders can be selected and the selected path can be\naccessed via the `selectedPath` property.",
    "displayName": "KeyedFileBrowser",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
      },
      "selectedPath": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The current selected path in the browser."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the value changes."
      },
      "files": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "key": {
                "name": "string",
                "required": true
              },
              "modified": {
                "name": "number",
                "required": false
              },
              "size": {
                "name": "number",
                "required": false
              }
            }
          }
        },
        "required": false,
        "description": "The file tree to be displayed in the browser.\nEach entry in the array must be an object with the `key`\nproperty, which specifies it's location in the tree. Other\nproperties are `modified` and `size`.\nTo be able to receive the path selection feedback, you must\nenter keys for both files and folders.",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/TagInput.js": {
    "description": "TagInput is an input for creating tags.\nThe input is fully customizable and its current added tags\ncan be accessed via the the `value` property.",
    "displayName": "TagInput",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the value changes."
      },
      "value": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "index": {
                "name": "number",
                "required": false
              },
              "displayValue": {
                "name": "string",
                "required": false
              }
            }
          }
        },
        "required": false,
        "description": "The input's current tags."
      },
      "wrapperStyle": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "object"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The component wrapper's style."
      },
      "tagStyle": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "object"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The tag's style."
      },
      "inputStyle": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "object"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The text input's style."
      },
      "tagDeleteStyle": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "object"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The tag delete button's style."
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Placeholder for the text input."
      },
      "injectedTags": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "index": {
                "name": "number",
                "required": false
              },
              "displayValue": {
                "name": "string",
                "required": false
              }
            }
          }
        },
        "required": false,
        "description": "Inject these tags into the component. They will be rendered on\nthe next React commit. This replaces the component's actual tags."
      }
    }
  }
}